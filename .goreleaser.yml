# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
project_name: ragie

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip

checksum:
  name_template: 'checksums.txt'

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - Merge pull request
      - Merge branch

brews:
  - repository:
      owner: ragieai
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    homepage: "https://github.com/ragie/ragie-cli"
    description: "A command line interface for importing various data formats into Ragie"
    license: "MIT"
    install: |
      bin.install "ragie"
    test: |
      system "#{bin}/ragie --version"

cloudsmiths:
  - organization: ragieai
    repository: ragie-repo
    distributions:
      deb:
        - "ubuntu/noble"

# Configuration for creating .deb and .rpm packages
nfpms:
  - id: ragie
    package_name: "{{ .ProjectName }}"
    vendor: Ragie Corp
    homepage: "https://github.com/ragie/ragie-cli"
    maintainer: "Ragie Corp <support@ragie.ai>"
    description: "A command line interface for importing various data formats into Ragie"
    license: MIT
    
    # Formats to be generated
    formats:
      - apk
      - deb
      - rpm
    
    # Contents to add to the package
    contents:
      - src: ./LICENSE
        dst: /usr/share/doc/ragie/copyright
        
    # Scripts to run at different stages
    scripts:
      postinstall: "scripts/postinstall.sh"
      preremove: "scripts/preremove.sh"

    # Debian/Ubuntu specific
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package
